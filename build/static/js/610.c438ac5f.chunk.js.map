{"version":3,"file":"static/js/610.c438ac5f.chunk.js","mappings":"mQA8DA,EA3DsB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAWC,EAAmB,EAAnBA,QAC1C,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eAiBA,OACE,SAAC,IAAD,CACEC,MAAM,2BACNC,KAAMN,EACNO,KAnBa,WACfH,EAAKI,QACN,EAkBGC,SAhBiB,WACnBR,GAAW,GACXG,EAAKM,aACN,EASC,UAME,UAAC,IAAD,CACEC,KAAK,QACLP,KAAMA,EACNQ,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAnBW,SAACC,GAChBhB,EAAQgB,GACRjB,GAAW,GACXG,EAAKM,aACN,EAiBKS,aAAa,MARf,WAUE,SAAC,SAAD,CACEC,MAAM,2BACNT,KAAK,cACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,UAKE,SAAC,IAAD,OAEF,SAAC,SAAD,CACEH,MAAM,2BACNT,KAAK,eACLU,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+CANf,UAUE,SAAC,IAAD,UAKT,E,oBC0CD,EApFgB,WACd,IAAMC,EAAiC,CACrC,CACEnB,MAAO,2BACPoB,UAAW,eAEb,CACEpB,MAAO,2BACPoB,UAAW,gBAEb,CACEpB,MAAO,eACPoB,UAAW,SACXC,OAAQ,SAACC,EAAGC,GAAJ,OACN,SAAC,IAAD,CACEvB,MAAM,8CACNwB,UAAW,WACTC,EAAQF,EAAOG,IAChB,EAEDC,OAAO,eACPC,WAAW,eAPb,UASE,SAAC,IAAD,CACEC,KAAK,UACLC,MAAO,CAAEC,gBAAiB,UAAWC,OAAQ,WAC7CC,MAAM,SAACC,EAAA,EAAD,IAHR,2BAVI,IAsBZ,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAKxC,EAAL,KAAayC,EAAb,KACIxC,EAAa,SAACyC,GAChBD,EAAUC,EACX,EACGC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,cAAY,WACxBH,GAASI,EAAAA,EAAAA,IAAKC,EAAAA,GAAAA,aACf,GAAE,CAACL,KACJM,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,CAACA,IAEJ,IAAIK,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMC,KAAKC,WAA3B,IAInBxB,EAAU,SAACC,GACbY,GAASY,EAAAA,EAAAA,IAAQxB,EAAKiB,EAAAA,GAAAA,aACvB,EACD,OACE,iBAAKb,MAAO,CAACqB,UAAU,OAAOC,UAAU,QAAxC,WACE,SAAC,IAAD,CACEjC,QAASA,EACTkC,WAAYR,EACZS,OAAO,MACPC,UAAQ,EACRC,YAAY,EACZxD,MAAO,kBACL,SAAC,IAAD,CACE6B,KAAK,UACL4B,QAAS,WACP7D,GAAW,EACZ,EACDqC,MAAM,SAACyB,EAAA,EAAD,IALR,qCADK,KAaT,SAAC,EAAD,CACE/D,OAAQA,EACRC,WAAYA,EACZC,QA9BQ,SAACwC,GACbC,GAASqB,EAAAA,EAAAA,IAAQtB,EAAKM,EAAAA,GAAAA,aACvB,MAgCF,C","sources":["components/Product/ProductDialog.tsx","view/Product.tsx"],"sourcesContent":["import { Modal, Form, Input } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst ProductDialog = ({ isShow, showDialog,addItem }: any) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    showDialog(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    addItem(values)\r\n    showDialog(false);\r\n    form.resetFields()\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"新增产品\"\r\n      open={isShow}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n    >\r\n      <Form\r\n        name=\"basic\"\r\n        form={form}\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 20 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        // onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"产品名称\"\r\n          name=\"productname\"\r\n          rules={[{ required: true, message: \"请输入产品名称\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"产品型号\"\r\n          name=\"productmodel\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"请输入产品型号\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductDialog;\r\n","import React, { useState, useEffect,useCallback } from \"react\";\r\nimport { Table, Button, Popconfirm } from \"antd\";\r\nimport { EditOutlined, ClearOutlined } from \"@ant-design/icons\";\r\nimport type { ColumnsType } from \"antd/es/table\";\r\nimport Dialog from \"../components/Product/ProductDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  asyncAddList as addList,\r\n  asyncDelList as delList,\r\n  asyncInitList as init,\r\n  initPayload,\r\n} from \"../store/infoReducer\";\r\ninterface DataType {\r\n  _id: string;\r\n  productname: string;\r\n  productmodel: string;\r\n}\r\n\r\nconst Product = () => {\r\n  const columns: ColumnsType<DataType> = [\r\n    {\r\n      title: \"产品名称\",\r\n      dataIndex: \"productname\",\r\n    },\r\n    {\r\n      title: \"产品型号\",\r\n      dataIndex: \"productmodel\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (_, record) => (\r\n        <Popconfirm\r\n          title=\"你确定要删除吗?\"\r\n          onConfirm={() => {\r\n            delItem(record._id);\r\n          }}\r\n          // onCancel={cancel}\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#e2a241\", border: \"#edc523\" }}\r\n            icon={<ClearOutlined />}\r\n          >\r\n            删除\r\n          </Button>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  let [isShow, setIsshow] = useState(false);\r\n  let showDialog = (val: boolean) => {\r\n    setIsshow(val);\r\n  };\r\n  let dispatch = useDispatch();\r\n  let getList = useCallback(() => {\r\n    dispatch(init(initPayload.productList) as any);\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList]);\r\n\r\n  let list = useSelector((state: any) => state.info.productList);\r\n  let addItem = (val: object) => {\r\n    dispatch(addList(val, initPayload.productList) as any);\r\n  };\r\n  let delItem = (_id: string) => {\r\n    dispatch(delList(_id, initPayload.productList) as any);\r\n  };\r\n  return (\r\n    <div style={{maxHeight:\"100%\",overflowY:\"auto\"}}> \r\n      <Table\r\n        columns={columns}\r\n        dataSource={list}\r\n        rowKey=\"_id\"\r\n        bordered\r\n        pagination={false}\r\n        title={() => (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              showDialog(true);\r\n            }}\r\n            icon={<EditOutlined />}\r\n          >\r\n            新增产品\r\n          </Button>\r\n        )}\r\n        // footer={() => \"Footer\"}\r\n      />\r\n      <Dialog\r\n        isShow={isShow}\r\n        showDialog={showDialog}\r\n        addItem={addItem}\r\n      ></Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"names":["isShow","showDialog","addItem","Form","form","title","open","onOk","submit","onCancel","resetFields","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","autoComplete","label","rules","required","message","columns","dataIndex","render","_","record","onConfirm","delItem","_id","okText","cancelText","type","style","backgroundColor","border","icon","ClearOutlined","useState","setIsshow","val","dispatch","useDispatch","getList","useCallback","init","initPayload","useEffect","list","useSelector","state","info","productList","delList","maxHeight","overflowY","dataSource","rowKey","bordered","pagination","onClick","EditOutlined","addList"],"sourceRoot":""}