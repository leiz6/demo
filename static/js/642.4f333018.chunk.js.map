{"version":3,"file":"static/js/642.4f333018.chunk.js","mappings":"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","sources":["components/Order/Add.tsx","components/Order/List.tsx","components/Order/Parta.tsx","components/Order/Partb.tsx","components/Order/Success.tsx","view/Order.tsx"],"sourcesContent":["import { Modal, Form, Input, InputNumber, Select } from \"antd\";\r\nimport React from \"react\";\r\nconst { Option } = Select;\r\nconst PartaDialog = ({\r\n  isShow,\r\n  showDialog,\r\n  addItem,\r\n  // partaList,\r\n  // partbList,\r\n  productList,\r\n  productColorList,\r\n  productDirectionList,\r\n  productLightList,\r\n  orderList,\r\n}: any) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    showDialog(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    addItem({...values,date:new Date().getTime()});\r\n    showDialog(false);\r\n    form.resetFields();\r\n  };\r\n  let changePartaname = (val: any) => {\r\n    let item = productList.filter((item: any) => {\r\n      return item.productname === val;\r\n    })[0].productmodel;\r\n    form.setFieldValue(\"productmodel\", item);\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"新增订货单\"\r\n      open={isShow}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n    >\r\n      <Form\r\n        name=\"basic\"\r\n        form={form}\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 18 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        // onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"产品名称\"\r\n          name=\"productname\"\r\n          // hasFeedback\r\n          rules={[{ required: true, message: \"请选择产品名称\" }]}\r\n        >\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            size=\"middle\"\r\n            placeholder=\"请选择产品名称\"\r\n            optionFilterProp=\"children\"\r\n            onChange={changePartaname}\r\n            filterOption={(input, option) =>\r\n              (option!.children as unknown as string)\r\n                .toLowerCase()\r\n                .includes(input.toLowerCase())\r\n            }\r\n          >\r\n            {productList.map((item: any) => {\r\n              return (\r\n                <Option value={item.productname} key={item._id}>\r\n                  {item.productname}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"产品型号\"\r\n          name=\"productmodel\"\r\n          rules={[{ required: true, message: \"请输入产品型号\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"表面处理(颜色)\"\r\n          name=\"productcolor\"\r\n          rules={[{ required: true, message: \"请选择颜色\" }]}\r\n        >\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            size=\"middle\"\r\n            placeholder=\"请选择颜色\"\r\n            optionFilterProp=\"children\"\r\n            // onChange={changePartaname}\r\n            filterOption={(input, option) =>\r\n              (option!.children as unknown as string)\r\n                .toLowerCase()\r\n                .includes(input.toLowerCase())\r\n            }\r\n          >\r\n            {productColorList.map((item: any) => {\r\n              return (\r\n                <Option value={item.productcolor} key={item._id}>\r\n                  {item.productcolor}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"出线方向\"\r\n          name=\"productdirection\"\r\n          rules={[{ required: true, message: \"请选择出线方向\" }]}\r\n        >\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            size=\"middle\"\r\n            placeholder=\"请选择出线方向\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              (option!.children as unknown as string)\r\n                .toLowerCase()\r\n                .includes(input.toLowerCase())\r\n            }\r\n          >\r\n            {productDirectionList.map((item: any) => {\r\n              return (\r\n                <Option value={item.productdirection} key={item._id}>\r\n                  {item.productdirection}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"光源\"\r\n          name=\"productlight\"\r\n          rules={[{ required: true, message: \"请输入光源\" }]}\r\n        >\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            size=\"middle\"\r\n            placeholder=\"请选择颜色\"\r\n            optionFilterProp=\"children\"\r\n            // onChange={changePartaname}\r\n            filterOption={(input, option) =>\r\n              (option!.children as unknown as string)\r\n                .toLowerCase()\r\n                .includes(input.toLowerCase())\r\n            }\r\n          >\r\n            {productLightList.map((item: any) => {\r\n              return (\r\n                <Option value={item.productlight} key={item._id}>\r\n                  {item.productlight}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"规格(mm)\"\r\n          name=\"productsize\"\r\n          rules={[{ required: true, message: \"请输入规格\" }]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} type=\"number\" min={1} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"数量(支)\"\r\n          name=\"productnum\"\r\n          rules={[{ required: true, message: \"请输入数量\" }]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} min={1} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"单价(元/米)\"\r\n          name=\"productprice\"\r\n          rules={[\r\n            { required: true, message: \"请输入单价\" },\r\n            // {message: \"单价最小为0.01\",validator:(_,value)=>{\r\n            //   if(typeof value !==\"number\"){\r\n            //     return Promise.reject()\r\n            //   }else if(value<0.01){\r\n            //     return Promise.reject()\r\n            //   }else{\r\n            //     return Promise.resolve()\r\n            //   }\r\n            // }}\r\n          ]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} min={0.01} precision={2} />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PartaDialog;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Table, Button, Popconfirm ,Modal,Typography} from \"antd\";\r\nimport { EditOutlined, ClearOutlined,CheckOutlined } from \"@ant-design/icons\";\r\nimport type { ColumnsType } from \"antd/es/table\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  asyncInitList as initList,\r\n  asyncAddList as AddList,\r\n  asyncDelList as delList,\r\n  initPayload,\r\n} from \"../../store/infoReducer\";\r\nimport Add from \"./Add\"\r\n// import dayjs from \"dayjs\";\r\nlet {Text} =Typography\r\ninterface DataType {\r\n  orderid: string;\r\n  // orderid: String; //订单编号\r\n  // partaid: string;\r\n  // partbid: string;\r\n  productname: String; //产品名称\r\n  productmodel: String; //产品型号\r\n  productcolor: String; //颜色 后期变成type 常量设置的的\r\n  productlight: String; //光源\r\n  productdirection: String; //方向\r\n  productsize: Number; //规格(mm)\r\n  productnum: Number; //数量\r\n  productprice: Number; //产品价格,\r\n  date: Date;\r\n}\r\n\r\nconst List = ({addOrder}:any) => {\r\n  let dispatch = useDispatch();\r\n  const columns: ColumnsType<DataType> = [\r\n    {\r\n      title: \"序号\",\r\n      render:(_,record,index)=>{\r\n        return <>{index+1}</>\r\n      }\r\n    },\r\n    {\r\n      title: \"产品名称\",\r\n      dataIndex: \"productname\",\r\n    },\r\n    {\r\n      title: \"产品型号\",\r\n      dataIndex: \"productmodel\",\r\n    },\r\n    {\r\n      title: \"表面处理(颜色)\",\r\n      dataIndex: \"productcolor\",\r\n    },\r\n    {\r\n      title: \"光源\",\r\n      dataIndex: \"productlight\",\r\n    },\r\n    {\r\n      title: \"出线方向\",\r\n      dataIndex: \"productdirection\",\r\n    },\r\n    {\r\n      title: \"规格(mm)\",\r\n      dataIndex: \"productsize\",\r\n    },\r\n    {\r\n      title: \"数量(支)\",\r\n      dataIndex: \"productnum\",\r\n    },\r\n    {\r\n      title: \"单价(元/米)\",\r\n      dataIndex: \"productprice\",\r\n    },\r\n    {\r\n      title: \"金额(元)\",\r\n      // dataIndex: \"productprice\",\r\n      render:(_,record)=>{\r\n        return <>{(Number(record.productprice)*Number(record.productnum)*Number(record.productsize)/1000).toFixed(2)}</>\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      render:(_,record)=>{\r\n        return <Popconfirm\r\n        title=\"你确定要删除吗?\"\r\n        onConfirm={() => {\r\n          delItem(record.date);\r\n        }}\r\n        onCancel={cancel}\r\n        okText=\"确定\"\r\n        cancelText=\"取消\"\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ backgroundColor: \"#e2a241\", border: \"#edc523\" }}\r\n          icon={<ClearOutlined />}\r\n        >\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n      }\r\n    },\r\n  ];\r\n  let partaList = useSelector((store:any)=>store.info.partaList)\r\n  let partbList = useSelector((store:any)=>store.info.partbList)\r\n  let productList = useSelector((store:any)=>store.info.productList)\r\n  let productColorList = useSelector((store:any)=>store.info.productColorList)\r\n  let productDirectionList = useSelector((store:any)=>store.info.productDirectionList)\r\n  let productLightList = useSelector((store:any)=>store.info.productLightList)\r\n  let orderList = useSelector((store:any)=>store.info.orderList)\r\n\r\n\r\n  let getList= useCallback(()=>{\r\n    Object.keys(initPayload).forEach((item)=>{\r\n      dispatch(initList(initPayload[item as initPayload]) as any)\r\n    })\r\n  },[dispatch])\r\n  useEffect(()=>{\r\n    getList()\r\n  },[])\r\n  let cancel = () => {};\r\n  let [list,setList] = useState([])\r\n  let [isShow, setIsshow] = useState(false);\r\n  let [isCreate, setIsCreate] = useState(false);\r\n  let showDialog = (val: boolean) => {\r\n    setIsshow(val);\r\n  };\r\n  let addItem = (val:any) => {\r\n    setList([...list,val as never])\r\n  };\r\n  let delItem = (date:any) => {\r\n    let modifyList = list.filter((item:any)=>{\r\n      return item.date !== date\r\n    })\r\n    setList(modifyList)\r\n  };\r\n  let createOrder=()=>{\r\n    addOrder(list)\r\n    setIsCreate(false)\r\n  }\r\n  return (\r\n    <div style={{maxHeight:\"100%\"}}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={list}\r\n        // scroll={{ x: 1024}}\r\n        rowKey={(record)=>{\r\n          return String(record.date)\r\n        }}\r\n        bordered\r\n        pagination={false}\r\n        title={() => (\r\n          <>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              showDialog(true);\r\n            }}\r\n            icon={<EditOutlined />}\r\n          >\r\n            新增订货单\r\n          </Button>\r\n          <Button\r\n          style={{marginLeft:\"30px\"}}\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setIsCreate(true)\r\n          }}\r\n          icon={<CheckOutlined />}\r\n        >\r\n          生成订单\r\n        </Button>\r\n        </>\r\n        )}\r\n        summary={(pageData) => {\r\n  \r\n          return (\r\n            <>\r\n              <Table.Summary.Row>\r\n                <Table.Summary.Cell index={0}>合计</Table.Summary.Cell>\r\n                <Table.Summary.Cell index={1}>\r\n                {/* type=\"danger\" */}\r\n                  <Text >{\r\n                    list.length?list.map((item:any)=>{\r\n                      return (Number(item.productprice)*Number(item.productnum)*Number(item.productsize)/1000)\r\n                    }).reduce((a,b)=>{return a+b}).toFixed(2)+\"元\":\"暂无\"\r\n\r\n                  }</Text>\r\n                </Table.Summary.Cell>\r\n              </Table.Summary.Row>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n      <Add \r\n      isShow={isShow} \r\n      showDialog={showDialog} \r\n      addItem={addItem} \r\n      // partaList={partaList} \r\n      // partbList={partbList} \r\n      productList={productList}\r\n      productColorList={productColorList}\r\n      productDirectionList={productDirectionList}\r\n      productLightList={productLightList}\r\n      orderList={orderList}\r\n      ></Add>\r\n      <Modal open={isCreate} onOk={createOrder} onCancel={()=>{setIsCreate(false)}}>\r\n        <h3>你确定要生成订单吗?</h3>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { Select, Card, Button,message  } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nconst { Option } = Select;\r\n\r\nconst Parta = ({ list ,submit}: any) => {\r\n  let [checked, setChecked] = useState(\"\");\r\n  const onChange = (val: string) => {\r\n    setChecked(val);\r\n  };\r\n\r\n  const onSure = () => {\r\n    if (checked) {\r\n      submit(checked)\r\n    }else{\r\n      message.info(\"请先选择\")\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Select\r\n        style={{ width: \"100%\" }}\r\n        showSearch\r\n        size=\"large\"\r\n        placeholder=\"请选择甲方\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        filterOption={(input, option) =>\r\n          (option!.children as unknown as string)\r\n            .toLowerCase()\r\n            .includes(input.toLowerCase())\r\n        }\r\n      >\r\n        {list.map((item: any) => {\r\n          return (\r\n            <Option value={item._id} key={item._id}>\r\n              {item.partaname}\r\n            </Option>\r\n          );\r\n        })}\r\n      </Select>\r\n      <Card\r\n        title=\"甲方信息\"\r\n        bordered={false}\r\n        style={{ width: \"100%\", marginTop: \"20px\" }}\r\n      >\r\n        {(() => {\r\n          if (checked) {\r\n            let item = list.filter((item: any) => {\r\n              return item._id === checked;\r\n            })[0];\r\n            return (\r\n              <>\r\n                <p>名称:&emsp;{item.partaname}</p>\r\n                <p>电话:&emsp;{item.tel}</p>\r\n                <p>日期:&emsp;{dayjs(item.date).format(\"YYYY年MM月DD日\")}</p>\r\n              </>\r\n            );\r\n          }else{\r\n            return <p>暂无信息 请选择</p>\r\n          }\r\n        })()}\r\n      </Card>\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        style={{\r\n          marginTop: \"20px\",\r\n          backgroundColor: \"#68c23f\",\r\n          border: \"#68c23f\",\r\n        }}\r\n        onClick={onSure}\r\n      >\r\n        确定甲方信息\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Parta;\r\n","import { Select, Card, Button,message  } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nconst { Option } = Select;\r\n\r\nconst Partb = ({ list ,submit}: any) => {\r\n  let [checked, setChecked] = useState(\"\");\r\n  const onChange = (val: string) => {\r\n    setChecked(val);\r\n  };\r\n\r\n  const onSure = () => {\r\n    if (checked) {\r\n      submit(checked)\r\n    }else{\r\n      message.info(\"请先选择\")\r\n    }\r\n  };\r\n  return (\r\n    < >\r\n      <Select\r\n        style={{ width: \"100%\" }}\r\n        showSearch\r\n        size=\"large\"\r\n        placeholder=\"请选择乙方\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        filterOption={(input, option) =>\r\n          (option!.children as unknown as string)\r\n            .toLowerCase()\r\n            .includes(input.toLowerCase())\r\n        }\r\n      >\r\n        {list.map((item: any) => {\r\n          return (\r\n            <Option value={item._id} key={item._id}>\r\n              {item.partbname}\r\n            </Option>\r\n          );\r\n        })}\r\n      </Select>\r\n      <Card\r\n        title=\"乙方信息\"\r\n        bordered={false}\r\n        style={{ width: \"100%\", marginTop: \"20px\" }}\r\n      >\r\n        {(() => {\r\n          if (checked) {\r\n            let item = list.filter((item: any) => {\r\n              return item._id === checked;\r\n            })[0];\r\n            return (\r\n              <>\r\n                <p>名称:&emsp;{item.partbname}</p>\r\n                <p>电话:&emsp;{item.fax}</p>\r\n              </>\r\n            );\r\n          }else{\r\n            return <p>暂无信息 请选择</p>\r\n          }\r\n        })()}\r\n      </Card>\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        style={{\r\n          marginTop: \"20px\",\r\n          backgroundColor: \"#68c23f\",\r\n          border: \"#68c23f\",\r\n        }}\r\n        onClick={onSure}\r\n      >\r\n        确定乙方信息\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Partb;\r\n","import React from \"react\";\r\nimport { Button, Result } from \"antd\";\r\nexport default function Success({goToPrint}:any) {\r\n  return (\r\n    <Result\r\n      status=\"success\"\r\n      title=\"订单生成成功!\"\r\n      subTitle=\"点击跳转订单确认书界面\"\r\n      extra={[\r\n        <Button\r\n          type=\"primary\"\r\n          key=\"console\"\r\n          size=\"large\"\r\n          style={{ width: \"50%\" }}\r\n          onClick={()=>{\r\n            goToPrint()\r\n          }}\r\n        >\r\n          跳转\r\n        </Button>,\r\n      ]}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { asyncInitList as initList,asyncAddList as addList, initPayload } from \"../store/infoReducer\";\r\nimport {\r\n  LoadingOutlined,\r\n  CalendarOutlined,\r\n  AuditOutlined,\r\n  SolutionOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Steps } from \"antd\";\r\nimport List from \"../components/Order/List\"\r\nimport Parta from \"../components/Order/Parta\";\r\nimport Partb from \"../components/Order/Partb\";\r\nimport Success from \"../components/Order/Success\";\r\nconst { Step } = Steps;\r\nfunction Order() {\r\n  let history = useHistory()\r\n  let dispatch = useDispatch();\r\n  let partaList = useSelector((state:any)=>state.info.partaList)\r\n  let partbList = useSelector((state:any)=>state.info.partbList)\r\n  let getList = useCallback(() => {\r\n    dispatch(initList(initPayload.partaList) as any);\r\n    dispatch(initList(initPayload.partbList) as any);\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    getList();\r\n  }, [getList]);\r\n  useEffect(()=>{\r\n    let year = new Date().getFullYear()\r\n    let id = new Date().getTime()\r\n    setOrderid(`${year}-27-${id}`)\r\n  },[])\r\n  \r\n  let [current, setCurrent] = useState(0);\r\n  let [partaVal, setPartaVal] = useState(null);\r\n  let [partbVal, setPartbVal] = useState(null);\r\n\r\n  let [orderid,setOrderid] = useState(\"\")\r\n  // let [list,setList] = useState([])\r\n  let sureParta = (id:any)=>{\r\n    // let item = partaList.filter((item:any)=>{\r\n    //   return item._id===id\r\n    // })\r\n    setPartaVal(id)\r\n    setCurrent(1)\r\n  }\r\n  let surePartb = (id:any)=>{\r\n  //   let item = partbList.filter((item:any)=>{\r\n  //     return item._id===id\r\n  //   })\r\n    setPartbVal(id)\r\n    setCurrent(2)\r\n  }\r\n  let addOrder=(list:any)=>{\r\n    list = list.map((item:any)=>{\r\n      item.orderid=orderid\r\n      item.partaid=partaVal\r\n      item.partbid=partbVal\r\n      return item\r\n    })\r\n    dispatch(addList(list,initPayload.orderList) as any)\r\n    setCurrent(3)\r\n  }\r\n  let goToPrint=()=>{\r\n    history.push({\r\n      pathname:\"/print\",\r\n      search:\"id=\"+orderid\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n    <Steps current={current}>\r\n      <Step  title=\"选择甲方\" icon={current===0?<LoadingOutlined />:<UserOutlined />} />\r\n      <Step  title=\"选择乙方\" icon={current===1?<LoadingOutlined />:<SolutionOutlined />} />\r\n      <Step  title=\"选择产品\" icon={current===2?<LoadingOutlined />:<CalendarOutlined />} />\r\n      <Step  title=\"生成订单\" icon={<AuditOutlined />} />\r\n    </Steps>\r\n    <div  style={{maxHeight:\"100%\",overflow:\"auto\",paddingTop:\"20px\"}}>\r\n        {(() => {\r\n          if (current === 0) {\r\n            return <Parta list={partaList} submit={sureParta}></Parta>;\r\n          } else if (current === 1) {\r\n            return <Partb list ={partbList} submit={surePartb}></Partb>;\r\n          }else if(current ===2){\r\n            return <List addOrder={addOrder}></List>\r\n          }else if(current ===3){\r\n            return <Success goToPrint={goToPrint}></Success>\r\n          }\r\n        })()}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"],"names":["Option","Select","isShow","showDialog","addItem","productList","productColorList","productDirectionList","productLightList","orderList","Form","form","title","open","onOk","submit","onCancel","resetFields","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","date","Date","getTime","autoComplete","label","rules","required","message","style","width","showSearch","size","placeholder","optionFilterProp","onChange","val","item","filter","productname","productmodel","setFieldValue","filterOption","input","option","children","toLowerCase","includes","map","value","_id","productcolor","productdirection","productlight","type","min","precision","Text","Typography","addOrder","dispatch","useDispatch","columns","render","_","record","index","dataIndex","Number","productprice","productnum","productsize","toFixed","onConfirm","delItem","cancel","okText","cancelText","backgroundColor","border","icon","ClearOutlined","useSelector","store","info","partaList","partbList","getList","useCallback","Object","keys","initPayload","forEach","initList","useEffect","useState","list","setList","setIsshow","isCreate","setIsCreate","modifyList","maxHeight","dataSource","rowKey","String","bordered","pagination","onClick","EditOutlined","marginLeft","CheckOutlined","summary","pageData","length","reduce","a","b","Add","checked","setChecked","partaname","marginTop","tel","dayjs","format","partbname","fax","Success","goToPrint","status","subTitle","extra","Step","Steps","history","useHistory","state","year","getFullYear","id","setOrderid","current","setCurrent","partaVal","setPartaVal","partbVal","setPartbVal","orderid","sureParta","surePartb","partaid","partbid","addList","push","pathname","search","LoadingOutlined","UserOutlined","SolutionOutlined","CalendarOutlined","AuditOutlined","overflow","paddingTop"],"sourceRoot":""}